name: Build and Release QR-App

on:
  push:
    tags:
      - "v*"

jobs:
  build:
    name: Build for ${{ matrix.goos }}-${{ matrix.goarch }}
    runs-on: ubuntu-latest
    strategy:
      matrix:
        goos: [linux, windows, darwin]
        goarch: [amd64, arm64]

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Set up Go
        uses: actions/setup-go@v5
        with:
          go-version: "1.22"

      - name: Build binary
        run: |
          VERSION=${GITHUB_REF_NAME}
          OUTPUT="qrapp-${{ matrix.goos }}-${{ matrix.goarch }}"
          if [ "${{ matrix.goos }}" = "windows" ]; then
            OUTPUT="${OUTPUT}.exe"
          fi
          GOOS=${{ matrix.goos }} GOARCH=${{ matrix.goarch }} go build -o $OUTPUT -ldflags "-X main.Version=${VERSION}" .

      - name: Upload artifact
        uses: actions/upload-artifact@v4
        with:
          name: ${{ matrix.goos }}-${{ matrix.goarch }}
          path: qrapp-${{ matrix.goos }}-${{ matrix.goarch }}*

  release:
    needs: build
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Download artifacts
        uses: actions/download-artifact@v4
        with:
          path: dist
          merge-multiple: true   # <--- WICHTIG: flache Struktur!

      - name: Generate latest.json
        run: |
          VERSION=${GITHUB_REF_NAME}
          echo "{" > dist/latest.json
          echo "  \"tag_name\": \"${VERSION}\"," >> dist/latest.json
          echo "  \"assets\": [" >> dist/latest.json
          first=true
          for file in dist/*; do
            if [ -f "$file" ]; then
              name=$(basename "$file")
              url="https://github.com/${{ github.repository }}/releases/download/${VERSION}/${name}"
              if [ "$first" = true ]; then
                first=false
              else
                echo "," >> dist/latest.json
              fi
              echo "    {\"browser_download_url\": \"${url}\", \"name\": \"${name}\"}" >> dist/latest.json
            fi
          done
          echo "  ]" >> dist/latest.json
          echo "}" >> dist/latest.json
          cat dist/latest.json

      - name: Create Release and Upload Assets
        uses: softprops/action-gh-release@v1
        with:
          tag_name: ${{ github.ref_name }}
          name: Release ${{ github.ref_name }}
          draft: false
          prerelease: false
          files: dist/*
        env:
          GITHUB_TOKEN: ${{ secrets.MY_GITHUB_TOKEN }}
